<?xml version="1.0" encoding="utf-8" ?>
<Defs>
    <!--Need to test something? All of these defs should be usable without dlc as a basic parent for testing purposes-->
    <AbilityDef Name="EBSG_TestAbilityBase" Abstract="True">
        <label>test ability</label>
        <description>This ability is testing the functionality of something, and if you see this description in a final product please notify the mod author.</description>
        <iconPath>Things/Mote/SpeechSymbols/Speech</iconPath>
        <category>Psychic</category>
        <cooldownTicksRange>60</cooldownTicksRange>
        <hostile>false</hostile>
        <verbProperties>
            <verbClass>Verb_CastAbility</verbClass>
            <range>30</range>
            <warmupTime>0.5</warmupTime>
            <requireLineOfSight>False</requireLineOfSight>
        </verbProperties>
    </AbilityDef>

    <AbilityDef Name="EBSG_TestSelfCastBase" ParentName="EBSG_TestAbilityBase" Abstract="True">
        <targetRequired>False</targetRequired>
        <verbProperties>
            <range>0.9</range>
            <targetParams>
                <canTargetSelf>True</canTargetSelf>
            </targetParams>
        </verbProperties>
    </AbilityDef>

    <GeneDef Name="EBSG_TestGeneBase" Abstract="True">
        <label>test gene</label>
        <description>This is just a test of a specific gene class/extension</description>
        <iconPath>UI/Icons/Genes/Gene_HairColor</iconPath>        <!--Using a generic icon that's I know will be there-->
        <displayCategory>Miscellaneous</displayCategory>
        <geneClass>EBSGFramework.HediffAdder</geneClass>
    </GeneDef>

    <HediffDef Name="EBSG_TestHediffBase" Abstract="True">
        <label>test hediff</label>
        <description>This is a test hediff</description>
        <everCurableByItem>false</everCurableByItem>
        <initialSeverity>0.001</initialSeverity>
        <stages />
        <hediffClass>HediffWithComps</hediffClass>
        <scenarioCanAdd>false</scenarioCanAdd>
    </HediffDef>

    <ThingDef ParentName="BuildingBase">
        <defName>GoldPanningSpot</defName>
        <label>gold panning spot</label>
        <description>Designates a spot for panning gold. The spot in question needs to be a location adjacent to shallow moving water, and must be placed on or next to soil/sand that can be used to easily embed tools with minimal risk of losing them.</description>
        <graphicData>
            <texPath>Things/Building/Production/CraftingSpot</texPath>
            <graphicClass>Graphic_Single</graphicClass>
        </graphicData>
        <altitudeLayer>FloorEmplacement</altitudeLayer>
        <statBases>
            <WorkToBuild>0</WorkToBuild>
        </statBases>
        <rotatable>false</rotatable>
        <scatterableOnMapGen>false</scatterableOnMapGen>
        <useHitPoints>False</useHitPoints>
        <designationCategory>Production</designationCategory>
        <passability>Standable</passability>
        <placeWorkers>
            <li>EBSGFramework.PlaceWorker_GathererTerrain</li>
        </placeWorkers>
        <comps>
            <li Class="CompProperties_Forbiddable" />
            <li Class="EBSGFramework.CompProperties_GathererSpot">
                <nearbyWaterTilesNeeded>2</nearbyWaterTilesNeeded>
                <onlyOneTerrainTypeNeeded>True</onlyOneTerrainTypeNeeded>
                <nearbyTerrainsNeeded>
                    <li> <!--Not being near an ocean is always a requirement, and meeting this has no influece on the soil condition-->
                        <terrain>WaterOceanShallow</terrain>
                        <count>0</count>
                        <maxDistance>5</maxDistance>
                    </li>
                    <li>
                        <terrain>Soil</terrain>
                        <count>1</count>
                        <maxDistance>0.9</maxDistance>
                    </li>
                    <li>
                        <terrain>SoilRich</terrain>
                        <count>1</count>
                        <maxDistance>0.9</maxDistance>
                    </li>
                    <li>
                        <terrain>Sand</terrain>
                        <count>1</count>
                        <maxDistance>0.9</maxDistance>
                    </li>
                </nearbyTerrainsNeeded>
            </li>
        </comps>
        <building>
            <sowTag>SupportPlantsOnly</sowTag>
            <canPlaceOverImpassablePlant>false</canPlaceOverImpassablePlant>
            <ai_chillDestination>false</ai_chillDestination>
            <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
        </building>
        <designationHotKey>Misc11</designationHotKey>
    </ThingDef>

    <ThingDef ParentName="BuildingBase">
        <defName>BeachForagingSpot</defName>
        <label>beach foraging spot</label>
        <description>Designates a spot for foraging along the beachside, finding random materials as the pawn goes along.</description>
        <graphicData>
            <texPath>Things/Building/Production/CraftingSpot</texPath>
            <graphicClass>Graphic_Single</graphicClass>
        </graphicData>
        <altitudeLayer>FloorEmplacement</altitudeLayer>
        <statBases>
            <WorkToBuild>0</WorkToBuild>
        </statBases>
        <rotatable>false</rotatable>
        <scatterableOnMapGen>false</scatterableOnMapGen>
        <useHitPoints>False</useHitPoints>
        <designationCategory>Production</designationCategory>
        <passability>Standable</passability>
        <placeWorkers>
            <li>EBSGFramework.PlaceWorker_GathererTerrain</li>
        </placeWorkers>
        <comps>
            <li Class="CompProperties_Forbiddable" />
            <li Class="EBSGFramework.CompProperties_GathererSpot">
                <nearbyWaterTilesNeeded>3</nearbyWaterTilesNeeded>
                <maxWaterDistance>5</maxWaterDistance>
                <onlyOneTerrainTypeNeeded>True</onlyOneTerrainTypeNeeded> <!--Must be true when multiple options are available-->
                <nearbyTerrainsNeeded>
                    <li> <!--Designates type of terrain it needs to be in. Ideally it's the same as what the options are searching for.-->
                        <terrain>Sand</terrain>
                        <count>1</count>
                        <maxDistance>0</maxDistance>
                    </li>
                    <li>
                        <terrain>SoftSand</terrain>
                        <count>1</count>
                        <maxDistance>0</maxDistance>
                    </li>
                </nearbyTerrainsNeeded>
                <options>
                    <li>
                        <amountOnFind>0~2</amountOnFind><!--How many to generate, with values zero and below being duds. In this case, there's only a 66% chance to find an item when this is picked-->
                        <thing>WoodLog</thing>
                        <nearbyTerrainsNeeded>
                            <li> <!--Only findable near the ocean-->
                                <terrain>WaterOceanShallow</terrain>
                                <count>1</count>
                                <maxDistance>10</maxDistance>
                            </li>
                        </nearbyTerrainsNeeded>
                    </li>
                    <li>
                        <amountOnFind>1</amountOnFind> <!--Unlike the driftwood, this always succeeds-->
                        <thing>Steel</thing>
                        <nearbyTerrainsNeeded>
                            <li> <!--Only findable near ponds and rivers-->
                                <terrain>WaterShallow</terrain>
                                <count>1</count>
                                <maxDistance>3</maxDistance>
                            </li>
                        </nearbyTerrainsNeeded>
                    </li>
                </options>
            </li>
        </comps>
        <building>
            <sowTag>SupportPlantsOnly</sowTag>
            <canPlaceOverImpassablePlant>false</canPlaceOverImpassablePlant>
            <ai_chillDestination>false</ai_chillDestination>
            <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
        </building>
        <designationHotKey>Misc11</designationHotKey>
    </ThingDef>

</Defs>

<!-- 
        <modExtensions>
            <li Class="EBSGFramework.EBSGExtension">
                
            </li>
        </modExtensions>
-->
